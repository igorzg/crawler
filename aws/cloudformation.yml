AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  EcrArn:
    Type: String

  EcrRepository:
    Type: String

  EcrTag:
    Type: String

  GithubLocation:
    Type: String

  MainVpcId:
    Type: String

  MainSubnets:
    Type: String

  MainSecurityGroupIds:
    Type: String

  StackName:
    Type: String
    Default: 'main-stack'

  CodeBuildLambdaArn:
    Type: String

  CodeBuildLambdaName:
    Type: String

Resources:
  MainBuild:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - MainBuildEvent
    Properties:
      Name: !Ref StackName
      ServiceRole: !Ref MainBuildRole
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:18.09.0
        EnvironmentVariables:
          - Name: ECR_REPOSITORY
            Value: !Ref EcrRepository
          - Name: ECR_TAG
            Value: !Ref EcrTag
          - Name: CLOUD_FORMATION
            Value: ""
      Source:
        Type: GITHUB
        Location: !Ref GithubLocation
      TimeoutInMinutes: 10
      VpcConfig:
        VpcId: !Ref MainVpcId
        Subnets: !Split [',', !Ref MainSubnets]
        SecurityGroupIds: !Split [',', !Ref MainSecurityGroupIds]

  MainBuildEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref StackName, 'build', 'status']]
      EventPattern:
        source:
          - 'aws.codebuild'
        detail-type:
          - 'Codebuild state change'
        detail:
          build-status:
            - 'IN_PROGRESS'
            - 'SUCCEEDED'
            - 'FAILED'
            - 'STOPPED'
        project-name:
          - !Ref StackName
      State: 'ENABLED'
      Targets:
        - Arn: !Ref CodeBuildLambdaArn
          Id: 'MainBuildLambdaTarget'

  MainBuildToInvokeLambda:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref CodeBuildLambdaName
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt MainBuildEvent.Arn

  LambdaStackInfo:
    Type: AWS::CloudFormation::CustomResource
    DependsOn:
      - MainBuildEvent
    Properties:
      ServiceToken: !Ref CodeBuildLambdaArn
      StackName: !Ref StackName
      StackEventName: !GetAtt MainBuildEvent.Name

  MainBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [
                'lambda.amazonaws.com',
                'codebuild.amazonaws.com',
                'events.amazonaws.com',
                !Join ['.', ['logs', !Ref 'AWS::Region', 'amazonaws.com']]
              ]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: MainBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:Describe*'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:CreateNetworkInterfacePermission'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'events:List*'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:GetRepositoryPolicy'
                  - 'ecr:DescribeRepositories'
                  - 'ecr:ListImages'
                  - 'ecr:DescribeImages'
                  - 'ecr:BatchGetImage'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:PutImage'
                Effect: Allow
                Resource: !Ref EcrArn
              - Action:
                  - 'logs:*'
                Effect: Allow
                Resource: !Join ['', [!Join [':', ['arn:aws:logs:*:*', 'log-group:/aws/codebuild/']], !Ref StackName,':log-stream:*']]
